version: "3.6"
services:
  jung:
    container_name: ui
    platforms:
      - linux/amd64
    image: gcr.io/coinos-326717/github.com/tokenocean/jungle:prod
    ports:
      - "3004:3000"
    restart: always
  lapp:
    depends_on:
      - hasura
      - hbp
      - redis
      # - liquid
    container_name: lapp
    platforms:
      - linux/amd64
    image: gcr.io/coinos-326717/github.com/tokenocean/jungle-server:prod
    restart: always
    command: ["pnpm", "dev"]
    environment:
      APP_URL: "${APP_URL}"
      AUTH_EVENT_VALUE: "${AUTH_EVENT_VALUE}"
      CLOUDFLARE_TOKEN: "${CLOUDFLARE_TOKEN}"
      CLOUDFLARE_ZONE: "${CLOUDFLARE_ZONE}"
      COINOS_TOKEN: "${COINOS_TOKEN}"
      COINOS_URL: "${COINOS_URL}"
      DOMAIN: "${DOMAIN}"
      HASURA_JWT: "${HASURA_GRAPHQL_JWT_SECRET}"
      HASURA_SECRET: "${HASURA_GRAPHQL_ADMIN_SECRET}"
      HASURA_URL: "${HASURA_URL}"
      HBP_URL: "${HBP_URL}"
      IPFS_URL: "${IPFS_URL}"
      IPFS_WEB_URL: "${IPFS_WEB_URL}"
      LIQUID_ELECTRS_URL: "${LIQUID_ELECTRS_URL}"
      NFT_STORAGE_TOKEN: "${NFT_STORAGE_TOKEN}"
      SERVER_URL: "${SERVER_URL}"
      SIGNING_SERVER_MNEMONIC: "${SIGNING_SERVER_MNEMONIC}"
      SMTP_HOST: "${SMTP_HOST}"
      SMTP_PASS: "${SMTP_PASS}"
      SMTP_PORT: "${SMTP_PORT}"
      SMTP_SENDER: "${SMTP_SENDER}"
      SMTP_USER: "${SMTP_USER}"
      RPCHOST: "${RPCHOST}"
      RPCPORT: "${RPCPORT}"
      RPCUSER: "${RPCUSER}"
      RPCPASS: "${RPCPASS}"
      RPCWALLET: "${RPCWALLET}"
    tmpfs:
      - /tmp
    volumes:
      - ./app:/app
      - ./custom:/opt/src/hasura/app/custom
      - ${STORAGE_DIR}:/export
    ports:
      - "8091:8091"

  postgres:
    container_name: postgres
    image: postgres:12
    platforms:
      - linux/arm/v7
    restart: always
    environment:
      # Environment variables...
    volumes:
      - ${DATA_DIR}:/var/lib/postgresql/data
    ports:
      - "5433:5432"

  hasura:
    container_name: hasura
    image: hasura/graphql-engine:v2.29.0.cli-migrations-v3.ubuntu.arm64
    platforms:
      - linux/arm/v7
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    restart: always
    volumes:
      - ./migrations:/hasura-migrations
      - ./metadata:/hasura-metadata
    environment:
      # Environment variables...

  hbp:
    container_name: hbp
    image: nhost/hasura-backend-plus:v2.4.0
    platforms:
      - linux/amd64
    depends_on:
      - hasura
    ports:
      - "3400:3000"
    environment:
      # Environment variables...
    volumes:
      - ./app:/app/custom
    restart: always

  ipfs:
    container_name: ipfs
    image: ipfs/go-ipfs:v0.14.0
    platforms:
      - linux/arm/v7
    ports:
      - 8081:8080
      - 4001:4001
      - 5001:5001
    volumes:
      - ${IPFS_DATA}:/data/ipfs
      - ${STORAGE_DIR}:/export
    restart: always

  liquid:
    container_name: liquid
    image: ghcr.io/vulpemventures/elements:22.1.1
    platforms:
      - linux/arm/v7
    volumes:
      - ./liquidregtest/liquid-config/:/home/elements/.elements
    restart: always

  redis:
    container_name: redis
    image: redis:latest
    platforms:
      - linux/arm/v7
    volumes:
      - ./redis:/data
    restart: always

networks: 
  default: 
    name: net
    external: true
